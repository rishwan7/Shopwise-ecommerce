<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>View Products</title>
    <style>
      body {
        font-family: Arial, sans-serif;
        margin: 0;
        padding: 0;
        background-color: #f8f9fa;
      }
      h1 {
        text-align: center;
        margin-top: 20px;
        font-size: 24px;
        color: #333;
      }
      table {
        width: 90%;
        margin: 20px auto;
        border-collapse: collapse;
        background-color: #fff;
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
      }
      th,
      td {
        padding: 15px;
        text-align: left;
        border-bottom: 1px solid #ddd;
      }
      .read-more {
        color: blue;
        cursor: pointer;
      }
      th {
        background-color: #f4f4f4;
        font-weight: bold;
      }
      tr:hover {
        background-color: #f1f1f1;
      }
      img {
        max-width: 100px;
        height: auto;
        display: block;
        margin: 0 auto;
      }
      td img {
        vertical-align: middle;
      }
      .error-message {
        color: red;
        text-align: center;
        margin-top: 10px;
      }
      .btn-delete {
        background-color: red;
        color: white;
        border: none;
        padding: 5px 10px;
        cursor: pointer;
        border-radius: 3px;
      }
      .btn-update {
        background-color: blue;
        margin-right: 5px;
      }
    </style>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
  </head>
  <body>
    <h1>Product List</h1>
    <table>
      <thead>
        <tr>
          <th>Image</th>
          <th>Name</th>
          <th>Description</th>
          <th>Price</th>
          <th>Offer Price</th>
          <th>Stock</th>
          <th>Category</th>
          <th>Subcategory</th>
          <th>Actions</th>
        </tr>
      </thead>
      <tbody>
        <% products.forEach(product => { %>
        <tr>
          <td>
            <img
              src="/productImage/<%= product.productImage %>"
              alt="<%= product.productName %>"
            />
          </td>
          <td><%= product.productName %></td>
          <td>
            <div class="description">
              <%= product.productDescription.substring(0, 50) %>
              <!-- Display initial part of description -->
              <span
                class="read-more"
                data-full-description="<%= product.productDescription %>"
                >Read More</span
              >
            </div>
          </td>
          <td><%= product.productPrice %></td>
          <td><%= product.offerPrice %></td>
          <td><%= product.productStock %></td>
          <td><%= product.productCategory?.categoryName %></td>
          <td><%= product.productSubCategory %></td>
          <td>
            <button class="btn-update" data-id="<%= product._id %>">
              Update
            </button>
            <button class="btn-delete" data-id="<%= product._id %>">
              Delete
            </button>
          </td>
        </tr>

        <% }); %>
      </tbody>
    </table>

    

    <script>
      document.querySelectorAll(".btn-delete").forEach((button) => {
        button.addEventListener("click", function () {
          const productId = this.getAttribute("data-id");

          Swal.fire({
            title: "Are you sure?",
            text: "You won't be able to revert this!",
            icon: "warning",
            showCancelButton: true,
            confirmButtonColor: "#3085d6",
            cancelButtonColor: "#d33",
            confirmButtonText: "Yes, delete it!",
          }).then((result) => {
            if (result.isConfirmed) {
              axios
                .delete(`/admin/deleteproduct/${productId}`)
                .then((response) => {
                  if (response.data.success) {
                    Swal.fire(
                      "Deleted!",
                      "Your product has been deleted.",
                      "success"
                    ).then(() => {
                      location.reload();
                    });
                  } else {
                    Swal.fire(
                      "Error!",
                      "An error occurred while deleting the product.",
                      "error"
                    );
                  }
                })
                .catch((error) => {
                  Swal.fire(
                    "Error!",
                    "An error occurred while deleting the product.",
                    "error"
                  );
                });
            }
          });
        });
      });

      document.querySelectorAll(".read-more").forEach((link) => {
        link.addEventListener("click", function () {
          const fullDescription = this.getAttribute("data-full-description");
          this.parentNode.innerHTML = fullDescription;
        });
      });
    </script>
  </body>
</html>
